<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="reply">
	<resultMap type="com.spring.moon.dto.ReplyVO" id="ReplyVO">
		<result property="bno" column="bno" />
		<result property="rno" column="rno" />
		<result property="replytext" column="replytext" />
		<result property="replyer" column="replyer" />
		<result property="secretReply" column="secret_reply" />
		<result property="writer" column="writer" />
		<result property="updatedate" column="updatedate" />
	</resultMap>


	<!-- 1. 댓글 입력 -->
	<!-- <insert id="insertReply" parameterType="com.spring.moon.dto.ReplyVO">
		INSERT INTO tbl_reply (rno, bno, replytext, replyer, secret_reply)
		VALUES ((SELECT NVL(MAX(rno)+1, 1)FROM tbl_reply), #{bno}, #{replytext}, #{replyer}, #{secretReply})
	</insert> -->
	<insert id="insertReply" parameterType="com.spring.moon.dto.ReplyVO">
   <selectKey keyProperty="prdgrIdx" resultType="Integer" order="BEFORE"> 
         SELECT 
                nvl(TO_NUMBER(MAX(rno)+1),0)
             FROM
                tbl_reply
   </selectKey>
   INSERT INTO
      tbl_reply
      (
         rno, 
         bno, 
         replytext, 
         replyer, 
         secret_reply
      )
   VALUES
   (
      (
            SELECT 
               nvl(TO_NUMBER(MAX(rno)+1),0)
          FROM
             tbl_reply
        )
        ,#{bno}
        ,#{replytext}
        ,#{replyer}
        ,#{secretReply}
   
   )
   </insert>
	<!-- 2. 댓글 목록 -->
	<select id="listReply" resultMap="ReplyVO">
		<include refid="pagingHeader"/>
			<!-- SELECT rno, bno, replytext, replyer, user_name AS userName, r.regdate, r.updatedate
			FROM tbl_reply r, tbl_member m
			WHERE  r.replyer = m.user_id AND bno=#{bno}
			ORDER BY rno -->
			SELECT
			  rno, replytext,replyer, secret_reply , updatedate
			FROM tbl_reply 
			WHERE
			  bno = #{bno}
			ORDER BY rno desc
		<include refid="pagingFooter"/>
	</select>
	
	<!-- 3. 댓글 상세보기 -->
	<select id="detailReply" resultMap="ReplyVO">
		SELECT rno, bno, replytext, replyer, updatedate, secret_reply AS secretReply FROM tbl_reply
		WHERE rno = #{rno}
	</select>
	
	<!-- 4. 댓글 수정 -->
	<select id="updateReply">
		UPDATE tbl_reply 
		SET replytext = #{replytext}
		WHERE rno = #{rno}
	</select>
	
	<!-- 5. 댓글 삭제 -->
	<delete id="deleteReply">
		DELETE FROM tbl_reply
		WHERE rno = #{rno}
	</delete>
	<delete id="reply_deleteReply">
		DELETE FROM tbl_reply
		WHERE bno = #{bno}
	</delete>
	<!-- 6 .댓글 갯수(for 페이징처리) -->
	<select id="countReply" resultType="int">
		SELECT COUNT(*) FROM tbl_reply WHERE bno=#{bno}
	</select>
	
	<!-- 페이징 sql -->
	<sql id="pagingHeader">
		SELECT * FROM (
			SELECT ROWNUM AS rn, A.* FROM (
	</sql>
	<sql id="pagingFooter">
			) A
		) WHERE rn BETWEEN #{start} AND #{end}
	</sql>
</mapper>














